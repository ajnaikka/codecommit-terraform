pipeline {
  agent any

  //AWS creds
  environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }
  
  stages {
    stage('Checkout') {
      steps {
             script {
                    def gitInfo = checkout scm
                    env.repo_name = gitInfo.GIT_URL.split('/')[-1].replace('.git', '')
                }
      }
    }

    // stage('Infra Destroy') {
    //   steps {
    //     dir('manifests') {
    //       sh 'terraform destroy -auto-approve'
    //     }
    //   }
    // }
  
  stage('Infra Build') {
    steps {
      dir('manifests') {
        sh 'terraform init'
        sh 'terraform validate'
        sh 'terraform plan'
        sh 'terraform apply --auto-approve'   
        }
      }
    }

//    stage('Export developer credentials'){
//         steps {
//             dir('manifests') {
//             sh 'terraform output dev_access_keys'
//             sh 'terraform output dev_secret_keys'
//             sh 'terraform output FC_access_keys'
//             sh 'terraform output FC_secret_keys'
//             }
//         }
//     }

//    stage('Read Sensitive Data'){
//         steps {
//             dir('manifests') {
//             sh 'terraform output -json > terraform_output.json'
//             }
//         }
//     }

  }
  post {
    always {
        // Send a Slack direct message to the committers about the build status.
      script {
        def buildStatus = currentBuild.currentResult == 'SUCCESS' ? 'good' : 'danger'
        def userId = slackUserIdFromEmail(email)
        def update_message = "Github Repo Name: $repo_name \n\n Commit by: <@$userId> \n\n Commit message : ${commit_message} \n\n Build status of \n${env.JOB_NAME} #${env.BUILD_NUMBER} \n(${env.BUILD_URL}) \nwas *${currentBuild.currentResult}*."
        slackSend(color: buildStatus, message: update_message, notifyCommitters:true)
              }
            }
            // Your other post-build actions here (e.g., email notifications, cleanup tasks).
        }
}

